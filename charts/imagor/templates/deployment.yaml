apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "imagor.fullname" . }}
  labels:
    {{- include "imagor.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  selector:
    matchLabels:
      {{- include "imagor.selectorLabels" . | nindent 6 }}
      app: imagor
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "imagor.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
        app: imagor
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "imagor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: 
            {{- include "imagor.securityContext" . | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PORT
              value: {{ .Values.api.port | quote }}
            - name: IMAGOR_UNSAFE
              value: {{ .Values.api.unsave | quote }}
            - name: FILE_LOADER_BASE_DIR
              value: {{ .Values.api.fileLoader.baseDir }}
            - name: FILE_STORAGE_BASE_DIR
              value: {{ .Values.api.fileStorage.baseDir }}
            - name: FILE_RESULT_STORAGE_BASE_DIR
              value: {{ .Values.api.fileResultStorage.baseDir }}
            - name: DEBUG
              value: {{ .Values.api.debug | quote }}
            - name: SERVER_CORS
              value: {{ .Values.api.server.cors | quote }}
            - name: SERVER_ACCESS_LOG
              value: {{ .Values.api.server.accessLog | quote }}
            {{ if .Values.api.httpLoader.baseUrl }}
            - name: HTTP_LOADER_BASE_URL
              value: {{ .Values.api.httpLoader.baseUrl }}
            {{ end}}
          ports:
            - name: http
              containerPort: {{ .Values.api.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
