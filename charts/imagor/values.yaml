# Default values for imagor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: shumc/imagor
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# -- List of additional pod labels
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

# -- Define the security context for the container. By default will use upstream recommended values.
# @default -- `{ privileged: false, runAsUser: 1001 }`, except in OpenShift where `runAsUser` is not set.
securityContext:
  {}

service:
  type: ClusterIP
  # -- Annotations to add to the service
  annotations: {}

# Strategy is utilized to configure the desired upgrade approach and
# configuration for the deployment.
strategy: {}

progressDeadlineSeconds: 120

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""
  # -- This is a beta feature, so it's not enabled by default.
  unhealthyPodEvictionPolicy:

nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints: []

volumes: []
#  - name: tmp-volume
#    emptyDir:
#      medium: Memory
#      sizeLimit: 2Gi

volumeMounts: []
#  - name: tmp-volume
#    mountPath: /tmp

ingress:
  # -- Set to true to enable ingress record generation.
  enabled: false
  # -- Set the class name of the ingress
  className: ""
  # -- Set the annotations of the ingress
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Set the hostnames of the ingress, see values.yaml for an example.
  hosts:
    []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
  # -- Set the TLS configuration for the ingress, see values.yaml for an example.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# The API module is an HTTP/1 and HTTP/2 (H2C) server. Other modules may add routes, middlewares, and health checks.
api:
  port: 8089
  unsave: 1
  fileLoader: 
    baseDir: /tmp/data
  fileStorage:
    baseDir: /tmp/data
  fileResultStorage:
    baseDir: /tmp/data/result
